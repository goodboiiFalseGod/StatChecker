<Window x:Class="MainApp.Crutches.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MainApp.Crutches"
        mc:Ignorable="d"
        Title="Settings" Height="520" Width="900" ResizeMode="NoResize"
        UseLayoutRounding="True"
        RenderOptions.BitmapScalingMode="NearestNeighbor"
        SnapsToDevicePixels="True"
        WindowStyle="None"
        AllowsTransparency="True"
        RenderOptions.ClearTypeHint="Enabled">
    <Window.Resources>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border" 
       Width="15" 
       Height="15" 
       CornerRadius="0" 
       Background="#1c1c1c"
       BorderThickness="1"
       BorderBrush="#404040">
                                    <Path 
        Width="7" Height="7" 
        x:Name="CheckMark"
        SnapsToDevicePixels="False" 
        Stroke="#D5D5C7"
        StrokeThickness="2"
        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
      VerticalAlignment="Center"
      HorizontalAlignment="Left"
      RecognizesAccessKey="True"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect BlurRadius="10" Color="White" ShadowDepth="0"></DropShadowEffect>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1c1c1c" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#606060" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background" Value="#1c1c1c" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                                <Setter Property="Foreground" Value="#D5D5C7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="4" Name="border" 
                            BorderThickness="1"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="White" ShadowDepth="0"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Duration="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="#555555"/>
                                <ColorAnimation Duration="0:0:0.1" BeginTime="0:0:0.1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="Black"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Width" Value="160"/>
            <Setter Property="Margin" Value="2, 2, 10, 2"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Background" Value="#1c1c1c"/>
            <Setter Property="Foreground" Value="#D5D5C7"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="10" Color="White" ShadowDepth="0"></DropShadowEffect>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="2, 2, 10, 2"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
        </Style>
        <ImageSource x:Key="bg">pack://application:,,,/Resources/pics/bg.png</ImageSource>
        <Style x:Key="DS">
            <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/#OptimusPrinceps" />
            <Setter Property="TextElement.Foreground" Value="#D5D5C7" />
        </Style>
    </Window.Resources>
    <Window.Background>
        <ImageBrush Stretch="Fill" ImageSource="{StaticResource bg}" AlignmentY="Top" AlignmentX="Center" Opacity="1">
            <ImageBrush.Transform>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </ImageBrush.Transform>
        </ImageBrush>
    </Window.Background>
    <Grid Style="{DynamicResource DS}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="333*"/>
            <ColumnDefinition Width="356*"/>
            <ColumnDefinition Width="211*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal" Margin="50, 50, 0, 50" Grid.Column="0">
            <StackPanel>
                <TextBlock Text="kick player 1"></TextBlock>
                <TextBlock Text="kick player 2"></TextBlock>
                <TextBlock Text="kick player 3"></TextBlock>
                <TextBlock Text="kick player 4"></TextBlock>
                <TextBlock Text="kick player 5"></TextBlock>
                <TextBlock Text="kick player 1"></TextBlock>
                <TextBlock Text="kick player 2"></TextBlock>
                <TextBlock Text="kick player 3"></TextBlock>
                <TextBlock Text="kick player 4"></TextBlock>
                <TextBlock Text="kick player 5"></TextBlock>
                <TextBlock Text="kill all mobs"></TextBlock>
                <TextBlock Text="homeward"></TextBlock>
                <TextBlock Text="heal me"></TextBlock>
                <TextBlock Text="kill me"></TextBlock>
                <TextBlock Text="stats"></TextBlock>
                <TextBlock Text="heal all"></TextBlock>
                <TextBlock Text="auto-revive"></TextBlock>
            </StackPanel>
            <StackPanel Name="Textboxes1">
                <TextBox Tag="1" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="2" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="3" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="4" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="5" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="6" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="7" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="8" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="9" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="10" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="11" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="12" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="13" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="14" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="15" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="16" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="17" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
            </StackPanel>



        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="5, 50, 0, 50" Grid.Column="1">
            <StackPanel>
                <TextBlock Text="auto-kick"></TextBlock>
                <TextBlock Text="trigger coventants"></TextBlock>
                <TextBlock Text="ember state"></TextBlock>
                <TextBlock Text="mark"></TextBlock>
                <TextBlock Text="recall"></TextBlock>
                <TextBlock Text="use tears of denial"></TextBlock>
                <TextBlock Text="use dried fingers"></TextBlock>
                <TextBlock Text="use ember"></TextBlock>
                <TextBlock Text="use white soapstone"></TextBlock>
                <TextBlock Text="use red soapstone"></TextBlock>
                <TextBlock Text="use red eye"></TextBlock>
                <TextBlock Text="use black crystal"></TextBlock>
                <TextBlock Text="use tree seed"></TextBlock>
                <TextBlock Text="mapV"></TextBlock>
                <TextBlock Text="highC"></TextBlock>
                <TextBlock Text="lowC"></TextBlock>
                <TextBlock Text="reattach"></TextBlock>
            </StackPanel>
            <StackPanel Name="Textboxes2" Grid.Column="1">
                <TextBox Tag="18" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="19" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="20" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="21" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="22" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="23" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="24" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="25" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="26" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="27" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="28" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="29" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="30" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="31" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="32" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="33" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
                <TextBox Tag="34" KeyUp="HotkeyHandler" MouseDoubleClick="HotkeyReset"/>
            </StackPanel>
        </StackPanel>
        <StackPanel Margin="10, 50, 30, 50" Grid.Column="2">
            <StackPanel Margin="0, 5" Orientation="Horizontal">
                <TextBlock Margin="0, 2, 0, 0" Text="enable hotkeys" Height="15" VerticalAlignment="Center" FontSize="14"/>
                <CheckBox Name="EnableHotkeysChk" IsChecked="False"
                          Checked="EnableHotkeys_Checked" Unchecked="EnableHotkeys_Unchecked"
                          Margin="60, 2, 0, 0"/>
            </StackPanel>
            <StackPanel Margin="0, 5" Orientation="Horizontal">
                <TextBlock Margin="0, 2, 0, 0" Text="allow use everywhere" Height="15" VerticalAlignment="Center" FontSize="14"/>
                <CheckBox Name="AllowUseEverywhereChk" IsChecked="False"
                          Checked="AllowUseEverywhere_Checked" Unchecked="AllowUseEverywhere_Unchecked"
                          Margin="15, 2, 0, 0"/>
            </StackPanel>
            <Button Name="RestoreDefaults" Click="RestoreDefaults_Click" Margin="0, 5" Height="20">
                <TextBlock Height="15" Margin="0" HorizontalAlignment="Center" FontSize="16"  Text="restore defaults"/>
            </Button>
        </StackPanel>
        <Button Name="CloseWindow" Grid.Column="2" Height="18" Width="18" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="14, 6, 6, 14" Click="CloseWindow_Click">
            <TextBlock Text="x" Margin="0" FontSize="14" HorizontalAlignment="Center" Height="14"></TextBlock>
        </Button>
    </Grid>
</Window>
